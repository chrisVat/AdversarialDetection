import pandas as pd
from PIL import Image
import torch
import torchvision
from torchvision import transforms
from torch.utils.data.dataset import Dataset
import io

"""
Custom Dataset Class to laod adversarial samples generated by 
	`generate_adversarial_dataset.py` file
"""

class AdversarialDataset(Dataset):
	def __init__(self, csv_path:str, data_path:str, transform = None):
		self.transform = transform 
		self.data_info = pd.read_csv(csv_path)
		self.data_len = len(self.data_info)
		self.data_path = data_path

	def __getitem__(self, index):
		if torch.is_tensor(index):
			index = index.tolist()

		fetched_row = self.data_info.iloc[index]
		img = torchvision.io.read_image(self.data_path + "/" + fetched_row[1]).float()
		target = fetched_row[3]
		if self.transform:
			img = self.transform(img)
		return img, target


	def __len__(self):
		return self.data_len